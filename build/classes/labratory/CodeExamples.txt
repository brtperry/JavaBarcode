/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package labratory;

/**
 *
 * @author pcbpy
 */
public class Pair<C, B> {
    
    public C key;
    public B value;
    
    public Pair(C key, B value) {
        
        this.key = key;
        this.value = value;        
    }
}



/*
for (Pair<Character, String> p: list) {

    if (p.key != ch) {continue;}
}
for (int i = 0; i < result.length(); i++) {}
*/

//list = new ArrayList<>();


/*
for(int i = 0; i < characters.length; i++){

    Pair<Character, String> p = new Pair<>(characters[i], binaries[i]);
    list.add(p);
}
*/  
    
    public static int counter = 0;
    
    
    public String getBarcodeText(String s) {
        counter += 1;
        return formatBarcode(s);   
    }
    
    private char[] characters = {'1', '2', '3', '4', '5', '6', '7', '8', '9', 
                                 '0', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 
                                 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 
                                 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 
                                 '-', '.', ' ', '*', '$', '/', '+', '%'};
    
    private String[] binaries = {"1110100010101110", "1011100010101110", 
                                 "1110111000101010", "1010001110101110", 
                                 "1110100011101010", "1011100011101010", 
                                 "1010001011101110", "1110100010111010", 
                                 "1011100010111010", "1010001110111010", 
                                 "1110101000101110", "1011101000101110", 
                                 "1110111010001010", "1010111000101110", 
                                 "1110101110001010", "1011101110001010", 
                                 "1010100011101110", "1110101000111010", 
                                 "1011101000111010", "1010111000111010",
                                 "1110101010001110", "1011101010001110", 
                                 "1110111010100010", "1010111010001110", 
                                 "1110101110100010", "1011101110100010", 
                                 "1010101110001110", "1110101011100010", 
                                 "1011101011100010", "1010111011100010", 
                                 "1110001010101110", "1000111010101110", 
                                 "1110001110101010", "1000101110101110", 
                                 "1110001011101010", "1000111011101010", 
                                 "1000101011101110", "1110001010111010", 
                                 "1000111010111010", "1000101110111010",
                                 "1000100010001010", "1000100010100010", 
                                 "1000101000100010", "1010001000100010"};
    
    //private List<Pair> list;      

